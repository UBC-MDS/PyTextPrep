name: ci-cd

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    # Step 1. Set up operating system
    runs-on: ubuntu-latest
    steps:
    # Step 2. Set up Python 3.9
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    # Step 3. Check-out repository so we can access its contents
    - uses: actions/checkout@v2
    # Step 4. Install poetry
    - uses: snok/install-poetry@v1
    # Step 5. Install our package
    - name: Install package
      run: poetry install
    # Step 6. Run tests for package
    - name: Test with pytest
      run: poetry run pytest tests/ --cov=pytextprep --cov-report=xml
    # Step 7. Use Codecov to track coverage
    - uses: codecov/codecov-action@v2
      with:
        files: ./coverage.xml   # coverage report
        fail_ci_if_error: true  # terminate workflow if there's an error
    # Step 8. Build documentation
    - name: Build documentation
      run: poetry run make html --directory docs/
  cd:
    # Only run this job if the "ci" job passes
    needs: ci
    # Only run this job if new work is pushed to "main"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    # Step 1. Set up operating system
    runs-on: ubuntu-latest
    steps:
    # Step 2. Set up Python 3.9
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    # Step 3. Check-out repository so we can access its contents
    - uses: actions/checkout@v2
      with:
        ref: main
        token : ${{ secrets.ACCESS_TOKEN }}

    # Step 4.1 Install poetry
    - uses: snok/install-poetry@v1

    # Step 4.2 Install our package
    - name: Install package
      run: poetry install

    # Step 5
    - name: Temporarily disable "include administrators" branch protection
      uses: benjefferies/branch-protection-bot@master
      if: always()
      with:
          access_token: ${{ secrets.ACCESS_TOKEN }}
          branch: main
          enforce_admins: false


    # Step 6.1 Use PSR via Poetry to make release
    - name: Bump version and tagging and publish
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git pull origin main
        poetry run semantic-release version
        git push --tag
        
    # Step 6.2 Push the changes to the repo
    - name: Push package version changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.ACCESS_TOKEN }}

    # Step 7
    - name: Enable "include administrators" branch protection
      uses: benjefferies/branch-protection-bot@master
      if: always()  # Force to always run this step to ensure "include administrators" is always turned back on
      with:
        access_token: ${{ secrets.ACCESS_TOKEN }}
        branch: main
        enforce_admins: true

    # Step 8. Build Package
    - name: Build pytextprep with Poetry
      run: poetry build

    # Step 9. Publish to TestPyPI
    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
        skip_existing: true
    # Step 10. Test install from TestPyPI
    - name: Test install from TestPyPI
      run: |
          pip install \
          --index-url https://test.pypi.org/simple/ \
          --extra-index-url https://pypi.org/simple \
          pytextprep
    # Step 11. Publish to PyPI
    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true